"""Add autoincrement to the rest of my tables

Revision ID: 568887abbc81
Revises: 1fc331454734
Create Date: 2025-07-07 18:24:30.444715

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '568887abbc81'
down_revision: Union[str, None] = '1fc331454734'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    #op.drop_table('Workout_Sections')
    #op.drop_table('Workout_Routine')
   # op.drop_table('user_workout_requests')
   # op.drop_index('ix_users_Email', table_name='users')
    #op.drop_table('users')
   # op.drop_table('user_profiles')
   # op.drop_table('WorkOuts')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('WorkOuts',
    sa.Column('ID', sa.INTEGER(), server_default=sa.text('nextval(\'"WorkOuts_ID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('Description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('ID', name='WorkOuts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_profiles',
    sa.Column('ID', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('FullName', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('HeightCM', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('WeightKG', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FitnessLevel', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('Goal', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('InjuriesOrLimitations', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['users.ID'], name='user_profiles_UserID_fkey'),
    sa.PrimaryKeyConstraint('ID', name='user_profiles_pkey'),
    sa.UniqueConstraint('UserID', name='user_profiles_UserID_key')
    )
    op.create_table('users',
    sa.Column('ID', sa.INTEGER(), server_default=sa.text('nextval(\'"users_ID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('HashedPassword', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('IsActive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('ID', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_Email', 'users', ['Email'], unique=True)
    op.create_table('user_workout_requests',
    sa.Column('ID', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('WorkoutID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('RequestType', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['UserID'], ['users.ID'], name='user_workout_requests_UserID_fkey'),
    sa.ForeignKeyConstraint(['WorkoutID'], ['WorkOuts.ID'], name='user_workout_requests_WorkoutID_fkey'),
    sa.PrimaryKeyConstraint('ID', name='user_workout_requests_pkey')
    )
    op.create_table('Workout_Routine',
    sa.Column('ID', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('SectionID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('RepsDuration', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('RoutineDescription', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ExerciseOrder', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['SectionID'], ['Workout_Sections.ID'], name='Workout_Routine_SectionID_fkey'),
    sa.PrimaryKeyConstraint('ID', name='Workout_Routine_pkey')
    )
    op.create_table('Workout_Sections',
    sa.Column('ID', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('WOID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('SectionName', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('SectionOrder', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['WOID'], ['WorkOuts.ID'], name='Workout_Sections_WOID_fkey'),
    sa.PrimaryKeyConstraint('ID', name='Workout_Sections_pkey')
    )
    # ### end Alembic commands ###
