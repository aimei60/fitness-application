name: Deploy to Production

on:
  push:
    branches: ["main"]

concurrency:
  group: "prod-deploy"
  cancel-in-progress: false

jobs:
  migrate_db:
    name: Run DB migrations (Neon)
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install backend deps
        working-directory: backend
        run: |
          pip install -U pip
          pip install -r requirements.txt

      - name: Apply migrations
        working-directory: backend  #for alembic.ini
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PYTHONPATH: ${{ github.workspace }}/backend
        run: alembic upgrade head

  deploy_api:
    name: Deploy API to Fly.io
    needs: migrate_db
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly deploy
        working-directory: backend  #for fly.toml + Dockerfile
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only --strategy rolling --wait-timeout 300

  deploy_web:
    name: Deploy Web to Vercel
    needs: deploy_api
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          
      #confirm paths exist to stop errors
      - name: Show folders
        run: |
          pwd
          ls -la
          ls -la frontend
          ls -la frontend/frontend-fitness

      - name: Build & Deploy (Production)
        working-directory: frontend/frontend-fitness
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          npm i -g vercel@latest
          vercel pull --yes --environment=production --token="$VERCEL_TOKEN" --cwd frontend/frontend-fitness
          vercel deploy --prod --token="$VERCEL_TOKEN" --cwd frontend/frontend-fitness
